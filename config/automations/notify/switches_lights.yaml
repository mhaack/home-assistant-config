---
# Send light & switch notifications"
#
alias: "[Notify] Send light & switch notifications"
trigger:
  - platform: event
    event_type: state_changed
condition:
  - condition: state
    entity_id: input_boolean.send_notification
    state: "on"
  - condition: template
    value_template: "{{ trigger.event.data.old_state is not none }}"
  - condition: template
    value_template: "{{ trigger.event.data.new_state is not none }}"
  - condition: or
    conditions:
      - condition: template
        value_template: >
          {{ trigger.event.data.entity_id in state_attr('group.all_switches','entity_id') }}
      - condition: template
        value_template: >
          {{ trigger.event.data.entity_id in state_attr('group.all_lights','entity_id') }}
  - condition: template
    value_template: >
      {{ trigger.event.data.entity_id not in state_attr('group.notify_disabled','entity_id') }}
  # the following condition is needed to filter out events from devices updated
  # on every attribute change but not the actual working state, like some
  # Homematic devices with power metering
  - condition: template
    value_template: >
      {{ trigger.event.data.new_state.state != trigger.event.data.old_state.state }}
action:
  service: notify.pushover_markus
  data_template:
    title: "JaMa Villa"
    message: >
      {% if trigger.event.data.new_state.state | lower == "on" %}
        {{ trigger.event.data.new_state.attributes.friendly_name }} ist an!
      {% elif trigger.event.data.new_state.state | lower == "off" %}
        {{ trigger.event.data.new_state.attributes.friendly_name }} ist aus.
      {% endif %}
